version: 2.1
orbs:
  1password: onepassword/secrets@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.1

filters: &filters
  tags:
    only: /.*/

jobs:
  # Create a job to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.
  integration-test-exec:
    machine:
      image: ubuntu-2204:current
    environment:
      SECRET: op://acceptance-tests/test-secret/password
      SECRET_IN_SECTION: op://acceptance-tests/test-secret/test-section/password
      MULTILINE_SECRET: op://acceptance-tests/multiline-secret/notesPlain
    steps:
      - checkout
      - run:
          command: echo $OP_CREDENTIALS >> 1password-credentials.json
      - run:
          command: docker-compose -f test/docker-compose.yaml up -d
      # Run your orb's commands to validate them.
      - 1password/install-op
      - run:
          name: 1Password CLI should be installed
          command: op --version
      - 1password/exec:
          step-name: "Validate secret injection at runtime"
          command: ./test/assert-env-set.sh
          
  integration-test-export:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          command: echo $OP_CREDENTIALS >> 1password-credentials.json
      - run:
          command: docker-compose -f test/docker-compose.yaml up -d
      # Run your orb's commands to validate them.
      - 1password/install-op
      - run:
          name: 1Password CLI should be installed
          command: op --version
      - 1password/export:
          var-name: SECRET
          secret-reference: op://acceptance-tests/test-secret/password
      - 1password/export:
          var-name: SECRET_IN_SECTION
          secret-reference: op://acceptance-tests/test-secret/test-section/password
      - 1password/export:
          var-name: MULTILINE_SECRET
          secret-reference: op://acceptance-tests/multiline-secret/notesPlain
      - run:
          name: validate exported environment variables
          command: ./test/assert-env-set.sh


workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - integration-test-exec:
          filters: *filters
      - integration-test-export:
          filters: *filters
      - orb-tools/pack:
          filters: *filters
      - orb-tools/publish:
          orb-name: onepassword/secrets
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/pack
            - integration-test-exec
            - integration-test-export
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
